/*
 * Copyright (c) 2015 Magnet Systems, Inc.
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

#import <Foundation/Foundation.h>

/**
 *  MMXConfiguration is a class used to contain configuration setting in order to set up your connection to the messaging server.
 */
@interface MMXConfiguration : NSObject <NSCopying>

/**
 * The Application ID that is generated by the Magnet developer portal for this application.
 */
@property (nonatomic, copy) NSString *appID;

/**
 * The API Key that is generated by the Magnet developer portal for this application.
 */
@property (nonatomic, copy) NSString *apiKey;

/**
 * If the application wishes to support "guest" login (login without a user),
 * this should return the pre-configured "guest" user secret.
 */
@property (nonatomic, copy) NSString *anonymousSecret;

/**
 * Example: NSURL *baseURL = [NSURL URLWithString:@"mmx://mmx-svr1.magnet.com:5222"];
 */
@property(nonatomic, strong) NSURL *baseURL;

/**
 *	This is used for the createUser API.
 *	By default this is set to 5220. There is no need to change this unless you are using non-standard ports.
 */
@property(nonatomic, assign) NSInteger publicAPIPort;

/**
 *	An identifier representing the network gateway or 'primary' server to which mobile clients connect.
 *	By default the value is "mmx".
 *	This value needs to match the Domain value found on the settings page of your Magnet Message Web Interface
 */
@property(nonatomic, strong) NSString *domain;

/**
 * Whether request operations should consult the credential storage for authenticating the connection. `YES` by default.
 */
@property (nonatomic, assign) BOOL shouldUseCredentialStorage;


/**
 *  Should contain the username and password for authentication.
 *	Both username and password should be at least 5 characters and no more than 40.
 *  The valid character set is alphanumeric plus period, dash and underscore. .-_
 */
@property (nonatomic, strong) NSURLCredential *credential;

/**
 *	Whether or not to force TLS. Defaults to `NO`.
 *	If set to YES the client will only connect via a secure connection.
 *	If the server does not support a secure connection the connection will fail.
 */
@property (nonatomic, assign) BOOL shouldForceTLS;

/**
 Whether or not to trust servers with an invalid or expired SSL certificates. Defaults to `NO`.
 */
@property (nonatomic, assign) BOOL allowInvalidCertificates;

/**
 * Creates and returns an `MMXConfiguration` object based on key-value pairs created in .plist
 */
+ (instancetype)configurationWithName:(NSString *)name;

- (BOOL)isEqualToConfiguration:(MMXConfiguration *)configuration;

@end